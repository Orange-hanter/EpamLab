Практическое задание: 
Исключения в С++

Цель работы: изучить различные способы обработки исключений;  получить практические навыки программирования задач с выделением памяти и обработкой исключений. 

Варианты заданий
    1. Опишите функцию умножения двух целых, обработайте ошибку переполнения сверху (overflow). 
    2. Опишите функцию деления двух целых, обработайте ошибку переполнения снизу (underflow). 
    3. Опишите функцию деления двух целых, обработайте ошибку деления на ноль (zero division). 
    4. Переопределите оператор ++ для указателя на массив целых, обработайте ошибку выхода за границы массива. 
    5. Опишите функцию анализа номера телефона, обработайте ошибку задания номера в неверном формате (допустимый формат - +7(095)555-44-33). 
    6. Опишите оператор [] для списка элементов, обработайте ошибку выхода за границы массива. 
    7. Опишите функцию, возвращающую день недели по дню и месяцу, обработайте ошибки неверного дня или месяца. 
    8. Опишите функцию умножения двух чисел с плавающей запятой, обработайте ошибку переполнения сверху (overflow). 
    9. Опишите функцию деления двух чисел с плавающей запятой, обработайте ошибку переполнения снизу (underflow). 
    10. Опишите функцию деления двух чисел с плавающей запятой, обработайте ошибку деления на ноль (zero division). 
    11. Опишите оператор [] для очереди элементов, обработайте ошибку выхода за границы массива. 
    12. Опишите оператор [] для вектора элементов, обработайте ошибку выхода за границы массива. 
    13. Реализуйте иерархию классов «MathErr», обрабатывающих ошибки переполнения сверху/снизу и деления на ноль. 


Упражнение 1
Напишите шаблон класса для работы с очередью. Учесть, что очереди требуется два индекса: индекс хвоста, куда добавляются новые элементы, и индекс головы очереди, откуда исчезают старые. 
Программист не будет совершать ошибок при написании модели очереди. Например, вместимость очереди не будет превышена, а из пустой очереди не будет производиться попыток удаления данных. Предусмотреть пользовательский ввод /вывод данных.
Определите несколько очередей разных типов и поработайте с их данными. 
Добавьте механизм обработки исключений в программу:  при превышении размера очереди и при попытке удаления данных из пустой очереди. Программа должна обеспечивать повторную попытку ввода данных пользователем без нарушения целостности содержимого очереди.

Упражнение 2
Создайте класс dofile, включающий в себя класс исключений и методы чтения, и записи файлов. Конструктор этого класса в качестве аргумента может брать имя файла, а действием конструктора, соответственно, может быть открытие этого файла. 